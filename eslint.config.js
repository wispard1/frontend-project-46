import js from '@eslint/js'
import pluginJest from 'eslint-plugin-jest'
import stylistic from '@stylistic/eslint-plugin'
import globals from 'globals'

export default [
  {
    ignores: ['**/node_modules/**', 'coverage/**'],
  },
  js.configs.recommended,
  {
    files: ['**/*.{js,mjs,cjs}'],
    languageOptions: {
      ecmaVersion: 2021,
      sourceType: 'module',
      globals: {
        ...globals.node,
        ...globals.vitest,
      },
    },
    plugins: {
      '@stylistic': stylistic,
      jest: pluginJest,
    },
    rules: {
      'no-unused-vars': 'error',
      'no-undef': 'error',
      'no-unused-expressions': 'off',

      '@stylistic/semi': ['error', 'never'],       // ‚ùå –¢–æ—á–∫–∏ —Å –∑–∞–ø—è—Ç–æ–π –Ω–µ –Ω—É–∂–Ω—ã
      '@stylistic/no-extra-semi': 'error',         // üîç –õ–æ–≤–∏–º –ª–∏—à–Ω–∏–µ —Ç–æ—á–∫–∏ —Å –∑–∞–ø—è—Ç–æ–π
      '@stylistic/arrow-parens': ['error', 'always'], // üì¶ –°–∫–æ–±–∫–∏ –≤–æ–∫—Ä—É–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
      '@stylistic/comma-dangle': ['error', 'only-multiline'], // üìù –ó–∞–ø—è—Ç—ã–µ —Ç–æ–ª—å–∫–æ –≤ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞—Ö
      '@stylistic/operator-linebreak': ['error', 'before'], // ‚¨Ü –ü–µ—Ä–µ–Ω–æ—Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
      '@stylistic/eol-last': ['error', 'always'],  // üìÑ –ù—É–∂–Ω–∞ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –∫–æ–Ω—Ü–µ —Ñ–∞–π–ª–∞
      '@stylistic/indent': ['error', 2],           // üí° –û—Ç—Å—Ç—É–ø—ã –ø–æ 2 –ø—Ä–æ–±–µ–ª–∞
      '@stylistic/no-trailing-spaces': ['error'],  // üßπ –ù–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–æ–±–µ–ª–æ–≤ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏
      '@stylistic/spaced-comment': ['error', 'always'], // üí¨ –ü—Ä–æ–±–µ–ª –ø–æ—Å–ª–µ //
      '@stylistic/quote-props': ['error', 'as-needed'], // üìù –ö–∞–≤—ã—á–∫–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
      '@stylistic/brace-style': ['error', 'stroustrup'], // üî∑ –§–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏ –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ
    },
  },
  {
    files: ['**/__tests__/**/*.{js,mjs,cjs}', '**/?(*.)+(spec|test).{js,mjs,cjs}'],
    rules: {
      'jest/no-disabled-tests': 'warn',
      'jest/no-focused-tests': 'error',
      'jest/no-identical-title': 'error',
      'jest/prefer-to-have-length': 'warn',
      'jest/valid-expect': 'error',
    },
  },
]
